# Generated by Django 5.2.5 on 2025-08-09 02:10

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobTemplate',
            fields=[
                ('template_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=255)),
                ('description', models.TextField(help_text='Template description')),
                ('default_params', models.JSONField(help_text='Default docking parameters')),
                ('advanced_params', models.JSONField(blank=True, help_text='Advanced parameters', null=True)),
                ('usage_count', models.IntegerField(default=0, help_text='Number of times template was used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(default='general', help_text='Template category', max_length=100)),
                ('is_public', models.BooleanField(default=False, help_text='Whether template is publicly available')),
            ],
            options={
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='advanced_params',
            field=models.JSONField(blank=True, help_text='Advanced docking parameters', null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='cpu_time',
            field=models.FloatField(blank=True, help_text='CPU time in seconds', null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='job_description',
            field=models.TextField(blank=True, help_text='Job description', null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='job_name',
            field=models.CharField(blank=True, help_text='User-provided job name', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='memory_usage',
            field=models.IntegerField(blank=True, help_text='Peak memory usage in MB', null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='pocket_detection_results',
            field=models.JSONField(blank=True, help_text='Binding pocket detection results', null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='priority',
            field=models.IntegerField(default=1, help_text='Job priority (1=low, 5=high)'),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='rescoring_results',
            field=models.JSONField(blank=True, help_text='GNINA rescoring results', null=True),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='tags',
            field=models.JSONField(default=list, help_text='User-defined tags for job organization'),
        ),
        migrations.AddField(
            model_name='dockingjob',
            name='user_session',
            field=models.CharField(blank=True, help_text='User session identifier', max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='BindingPocket',
            fields=[
                ('pocket_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('protein_pdb_id', models.CharField(help_text='PDB ID of the protein', max_length=10)),
                ('center_x', models.FloatField(help_text='X coordinate of pocket center')),
                ('center_y', models.FloatField(help_text='Y coordinate of pocket center')),
                ('center_z', models.FloatField(help_text='Z coordinate of pocket center')),
                ('radius', models.FloatField(help_text='Pocket radius in Angstroms')),
                ('volume', models.FloatField(help_text='Pocket volume in cubic Angstroms')),
                ('druggability_score', models.FloatField(blank=True, help_text='Druggability score (0-1)', null=True)),
                ('hydrophobicity', models.FloatField(blank=True, help_text='Hydrophobicity score', null=True)),
                ('polarity', models.FloatField(blank=True, help_text='Polarity score', null=True)),
                ('detection_method', models.CharField(default='fpocket', help_text='Method used for detection', max_length=50)),
                ('confidence_score', models.FloatField(help_text='Confidence in pocket detection')),
                ('residues', models.JSONField(help_text='List of residues forming the pocket')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-confidence_score'],
                'unique_together': {('protein_pdb_id', 'center_x', 'center_y', 'center_z')},
            },
        ),
    ]
